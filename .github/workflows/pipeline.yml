name: Node.js CI

on:
  push:
    branches:
      - main
env:
  AWS_AKI: ASIA4CNEIWXIUA3ZEDJA
  AWS_SAK: QilTPGxTKWQVvmY6I8Yy2DWhYHDzjImdL0xIULbx
  AWS_ST: FwoGZXIvYXdzEKb//////////wEaDPjwx5hv8ecw694k3CLMAdLEhsWEbUU6h0DEuQb3RZPWJwsAPO71exIe61zBNo11g5AKB6DuDBAye+0ryCya4U2y3Avj3q/vyCydHy2AVBcSvRH95P7PWK9Cnc4852ORCwy3ca70a/uTLbAIPEE7fGrk5a69uwCT34h2hzbQIbOnTc2a2LhRaEEQGU8diNiazrlNTdIli+aDljGLuHxu0XSXm3mY70QN47JoYuMaVhxcf1+CoSCyCV7SCJIXgpaL6nNvKNrflVy/YZeMOTxHeR9EBmyd8xSVwZ6wCii2/6GrBjItSeuL5M0emlLGolZGWQIkr0HhN/bJHCOONbpXC0G6fKipcxf8gekIJhBo5OdK
  AWS_R: us-east-1
  AWS_U_ECR: 829810062801.dkr.ecr.us-east-1.amazonaws.com 
  DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v2

    - name: Setup Node.js 18
      uses: actions/setup-node@v2
      with:
        node-version: 18

    - name: Instalar dependências do backend
      working-directory: ./backend
      run: npm install

    - name: Executar testes do backend
      working-directory: ./backend
      run: npm run test

  frontend:
    runs-on: ubuntu-latest
    needs: backend

    steps:
    - name: Checkout código
      uses: actions/checkout@v2

    - name: Instalar dependências do frontend
      working-directory: ./frontend
      run: npm install

  configs_aws_config_build_docker_and_deploy:
    runs-on: ubuntu-latest
    needs: frontend

    steps:
    - name: Checkout código
      uses: actions/checkout@v2
      
    - name: Configure AWS credentials for terraform
      run: aws configure set aws_access_key_id $AWS_AKI && aws configure set aws_secret_access_key $AWS_SAK && aws configure set aws_session_token $AWS_ST && aws configure set region $AWS_R
    
    - name: Configure AWS credentials for kubectl        
      run: aws ecr get-login-password --region $AWS_R | docker login --username AWS --password-stdin $AWS_U_ECR
    
    - name: Build e Push da imagem Docker do frontend
      working-directory: ./frontend
      run: |
        docker build -t restaurant-frontend . &&
        docker tag restaurant-frontend:latest $AWS_U_ECR/restaurant-frontend:latest &&
        docker push $AWS_U_ECR/restaurant-frontend:latest

    - name: Build e Push da imagem Docker do backend
      working-directory: ./backend
      run: |
        docker build -t restaurant-backend . &&
        docker tag restaurant-backend:latest $AWS_U_ECR/restaurant-backend:latest &&
        docker push $AWS_U_ECR/restaurant-backend:latest
                
    - name: Setup terraform
      uses: hashicorp/setup-terraform@v2.0.3

    - name: Init terraform
      working-directory: ./
      run: |
        terraform init
        
    - name: Create terraform infrastructure
      working-directory: ./
      run: |
        terraform apply -auto-approve
        
    - name: Setup SSH
      working-directory: ./
      run: |
        mkdir -p ~/.ssh
        echo "$DEPLOY_KEY" > ~/.ssh/id_rsa.pem
        chmod 600 ~/.ssh/id_rsa.pem
        ssh-keyscan -t rsa SEU_SERVIDOR >> ~/.ssh/known_hosts

    - name: Deploy Ansible
      working-directory: ./ansible
      run: |
        ansible-playbook -i inventario site.yml

    


      
