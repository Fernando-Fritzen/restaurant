name: Node.js CI

on:
  push:
    branches:
      - main
env:
  AWS_AKI: ASIA4CNEIWXIX7PRRBOM
  AWS_SAK: uBg7bke2EfbigRnH5jQ1KxOGpAVFAkko4Tw17l8t
  AWS_ST: FwoGZXIvYXdzEKr//////////wEaDJxDjBM0DdTn/2JrDyLMAbo5BmayFxGZcLXF+PSRlP1rl9SSyCsJ008rN4q03LYF0Sc8ODdoOo3qNpe2ayLakzyxKa8Mt0Pk3B8j07xzC5ycnokMEXIgUXPjEIKlknXoFnORCcrc6VGB5YmPOJLCaVVOMCdI39NodYJ8WNb7FSIZiWwaeEXSjTgkjyQV99cXPJQVVP5We2GduclEaSGIKzc5Pzr+JTob1HX4bebGOPH9q5W0Jc6v3TtSGwxJjdXFFBMGciOQD++RXs9Hp6OLeiCMDHDf5A6jeba2eyiF8qKrBjItgX1MOYkmWvvuDPfwipzdqBXc9EZv4CvC/qud6f9TEbvf7ik//Z9xkYJ1/2kE
  AWS_R: us-east-1
  AWS_U_ECR: 829810062801.dkr.ecr.us-east-1.amazonaws.com 

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v2

    - name: Setup Node.js 18
      uses: actions/setup-node@v2
      with:
        node-version: 18

    - name: Instalar dependências do backend
      working-directory: ./backend
      run: npm install

    - name: Executar testes do backend
      working-directory: ./backend
      run: npm run test

  frontend:
    runs-on: ubuntu-latest
    needs: backend

    steps:
    - name: Checkout código
      uses: actions/checkout@v2

    - name: Instalar dependências do frontend
      working-directory: ./frontend
      run: npm install

  build_docker_images:
    runs-on: ubuntu-latest
    needs: frontend

    steps:
    - name: Checkout código
      uses: actions/checkout@v2
      
    - name: Configure AWS credentials for terraform
      run: aws configure set aws_access_key_id $AWS_AKI && aws configure set aws_secret_access_key $AWS_SAK && aws configure set aws_session_token $AWS_ST && aws configure set region $AWS_R
    
    - name: Configure AWS credentials for kubectl        
      run: aws ecr get-login-password --region $AWS_R | docker login --username AWS --password-stdin $AWS_U_ECR
    
    - name: Build e Push da imagem Docker do frontend
      working-directory: ./frontend
      run: |
        docker build -t restaurant-frontend . &&
        docker tag restaurant-frontend:latest $AWS_U_ECR/restaurant-frontend:latest &&
        docker push $AWS_U_ECR/restaurant-frontend:latest

    - name: Build e Push da imagem Docker do backend
      working-directory: ./backend
      run: |
        docker build -t restaurant-backend . &&
        docker tag restaurant-backend:latest $AWS_U_ECR/restaurant-backend:latest &&
        docker push $AWS_U_ECR/restaurant-backend:latest
                
    - name: Setup terraform
      uses: hashicorp/setup-terraform@v2.0.3

    - name: Init terraform
      working-directory: ./
      run: |
        terraform init
        
    - name: Create terraform infrastructure
      working-directory: ./
      run: |
        terraform apply -auto-approve

    


      
